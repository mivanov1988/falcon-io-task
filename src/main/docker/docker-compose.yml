---
version: "3"

services:
  falcon-io-task1:
    image: falcon-io/task
    hostname: falcon-io-task1
    ports:
      - "8080:8080"
    depends_on:
      - zookeeper
      - kafka
      - kafka-schema-registry
      - db
      - rabbitmq
    command: dockerize -wait tcp://kafka:9092 -wait tcp://mysql:3306

  falcon-io-task2:
    image: falcon-io/task
    hostname: falcon-io-task2
    ports:
      - "8082:8080"
    depends_on:
      - zookeeper
      - kafka
      - kafka-schema-registry
      - db
      - rabbitmq
    command: dockerize -wait tcp://kafka:9092 -wait tcp://mysql:3306

  falcon-io-task3:
    image: falcon-io/task
    hostname: falcon-io-task3
    ports:
      - "8083:8080"
    depends_on:
      - zookeeper
      - kafka
      - kafka-schema-registry
      - db
      - rabbitmq
    command: dockerize -wait tcp://kafka:9092 -wait tcp://mysql:3306

  zookeeper:
    image: zookeeper
    restart: unless-stopped
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zookeeper:2888:3888

  kafka:
    image: confluentinc/cp-kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_CREATE_TOPICS: "messages:3:3"
    depends_on:
      - zookeeper

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry
    hostname: kafka-schema-registry
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://kafka-schema-registry:8081
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: none
    depends_on:
      - zookeeper
      - kafka

  schema-registry-ui:
    image: landoop/schema-registry-ui
    hostname: kafka-schema-registry-ui
    ports:
      - "8001:8000"
    environment:
      SCHEMAREGISTRY_URL: http://kafka-schema-registry:8081/
      PROXY: "true"
    depends_on:
      - kafka-schema-registry

  db:
    image: mysql
    hostname: mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: taskdb
      MYSQL_USER: taskuser
      MYSQL_PASSWORD: taskpass

  rabbitmq:
    #image: "rabbitmq:3-management"
    image: resilva87/docker-rabbitmq-stomp
    hostname: "rabbitmq"
    ports:
      - 61613:61613
      - 15674:15674
      - 15672:15672